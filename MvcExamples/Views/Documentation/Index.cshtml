
<div class="row">
    <div class="col-md-12">
        <h2>Documentation</h2>
        <p>TEXT TO COME Customizing data creation for SeedPacket</p>
        <h3>Overview</h3>
        <p> TEXT TO COME 
            SeedPacket is for the quick seeding of data on a List (or most types that implement IEnumerable). 
            It is easy to use out of the box for prototyping, data generation, and unit testing. It customizable
            with a powerful rules engine that can pull data from an external source such as an Xml file or string.
        </p>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>SeedPacket Namespace</h3>
        <ul class="namespaceList">
            <li class="class">
                <h4>SeedCore class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Constructor:</strong>
                <ul>
                    <li>
                        <h5>SeedCore (IGenerator generator = null)</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>SeedList&lt;T&gt; (IEnumerable&lt;T&gt; iEnumerable, IGenerator generator = null) : returns IEnumerable&lt;T&gt;</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>SimpleSeed class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Constructor:</strong>
                <ul>
                    <li>
                        <h5>SimpleSeed(string sourcefilepath = null, string sourcestring = null, DataInputType seedinputtype = DataInputType.Auto)</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Properties:</strong>
                <ul>
                    <li>
                        <h5>Default : string</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>DefaultRandom:  Random</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>Next(string identifier, int number, string ifNull = null) : returns string</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Randomize(string identifier, string ifNull = null) : returns string</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>Rules class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Implements:</strong>
                <ul>
                    <li>
                        <h5>Collection&lt;Rule&gt;</h5>
                    </li>
                    <li>
                        <h5>IRules</h5>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>GetRuleByTypeAndName(Type propertyType, string propertyName) : returns Rule</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Add(Rule rule, bool overwrite = true): returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>AddRange(IEnumerable&lt;Rule&gt;rules, bool overwrite = true) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>RemoveRuleByName(string ruleName) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>Rule class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Constructor:</strong>
                <ul>
                    <li>
                        <h5>Rule(Type typeMatch, string nameMatch, Func&lt;IGenerator, dynamic&gt; rule, string ruleName, string description = "")</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Properties:</strong>
                <ul>
                    <li>
                        <h5>RuleName : returns string</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Description : returns string</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>IsMatch (Type propType, string propName) : returns bool</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>ApplyRule (IGenerator generator) : returns dynamic</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>RuleExtensions static class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Extension Methods:</strong>
                <ul>
                    <li>
                        <h5>static AddAdvancedRules (this Rules rules) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>static AddAdvancedRules (this Rules rules) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>RulesSet Enum</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
            </li>
            <li class="class">
                <h4>DataTypeInput Enum</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
            </li>
        </ul>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>SeedPacket.Extensions Namespace</h3>
        <ul class="namespaceList">
            <li class="class">
                <h4>SeedExtensions static class</h4>
                <strong>Extension Methods:</strong>
                <ul>
                    <li>
                        <h5>static Seed&lt;T&gt;(this IEnumerable&lt;T&gt; iEnumerable, int count) : returns IEnumerable&lt;T&gt;</h5>
                        <p> where T : new() Some information...</p>
                    </li>
                    <li>
                        <h5>static Seed&lt;T&gt;(this IEnumerable&lt;T&gt; iEnumerable, IGenerator generator) : returns IEnumerable&lt;T&gt;</h5>
                        <p> where T : new() Some information...</p>
                    </li>
                    <li>
                        <h5>static Seed&lt;T&gt; (this IEnumerable&lt;T&gt; iEnumerable, int seedBegin, int seedEnd, string filePath) : returns IEnumerable&lt;T&gt;</h5>
                        <p> where T : new() Some information...</p>
                    </li>
                    <li>
                        <h5>static Seed&lt;T&gt; (this IEnumerable&lt;T&gt; iEnumerable, int seedBegin = 1, int seedEnd = 10, IGenerator generator = null) : returns IEnumerable&lt;T&gt;</h5>
                        <p> where T : new() Some information...</p>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>SeedPacket.Generators Namespace</h3>
        <ul class="namespaceList">
            <li class="class">
                <h4>Generator abstract class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Implements:</strong>
                <ul>
                    <li>
                        <h5>IGenerator</h5>
                    </li>
                </ul>
                <strong>Properties:</strong>
                <ul>
                    <li>
                        <h5>SeedBegin : int</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>SeedEnd : int</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Datasource : readOnly IDataSource</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Rules : Rules</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>BaseRandom : Random</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>BaseDateTime : DateTime</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Debugging : bool</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>RowCount : readOnly int</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>RowNumber : int</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>RowRandom : readOnly Random</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>RowRandomNumber : readOnly int</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>CurrentRowValues : readOnly Dictionary&lt;string, object&gt;</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>CurrentProperty : MetaProperty</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>GetNextRowRandom : returns void</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>BasicGenerator class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Implements:</strong>
                <ul>
                    <li>
                        <h5>Generator</h5>
                    </li>
                    <li>
                        <h5>IGenerator</h5>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>MultiGenerator class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Constructor:</strong>
                <ul>
                    <li>
                        <h5>MultiGenerator(string sourceFilepath = null, string sourceString = null,
                                           DataInputType dataInputType = DataInputType.Auto,
                                           RulesSet rulesSet = RulesSet.Advanced)</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>MultiGenerator (IDataSource datasource, RulesSet rulesSet = RulesSet.Advanced)</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>GetRules (RulesSet ruleSet) : returns void</h5>
                        <p>Is virtual....</p>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>SeedPacket.DataSources Namespace</h3>
        <ul class="namespaceList">
            <li class="class">
                <h4>JsonDataSource class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Implements:</strong>
                <ul>
                    <li>
                        <h5>IDataSource</h5>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>Parse(string json) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Load(string sourceFilePath) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>GetElementList(string identifier) : returns List&lt;string&gt;</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>XmlDataSource class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Implements:</strong>
                <ul>
                    <li>
                        <h5>IDataSource</h5>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>Parse(string xml) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Load(string sourceFilePath) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>LoadDefaultData() : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>GetElementList(string identifier) : returns List&lt;string&gt;</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>MultiDataSource class</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Implements:</strong>
                <ul>
                    <li>
                        <h5>IDataSource</h5>
                    </li>
                </ul>
                <strong>Constructors:</strong>
                <ul>
                    <li>
                        <h5>MultiDataSource(string sourcefilepath = null, string sourcestring = null, DataInputType datainputtype = DataInputType.Auto)</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>GetElementList(string identifier) : returns List&lt;string&gt;</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>SeedPacket.Interfaces Namespace</h3>
        <ul class="namespaceList">
            <li class="class">
                <h4>IGenerator</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Members:</strong>
                <ul>
                    <li>
                        <h5>IRules Rules { get; }</h5>
                        <h5>int SeedBegin { get; set; }</h5>
                        <h5>int SeedEnd { get; set; }</h5>
                        <h5>Random BaseRandom { get; }</h5>
                        <h5>DateTime BaseDateTime { get; }</h5>
                        <h5>bool Debugging { get; set; }</h5>
                        <h5>dynamic Cache { get; set; }</h5>
                        <h5>IDataSource Datasource { get;  }</h5>
                        <h5>int RowNumber { get; set; }</h5>
                        <h5>int RowRandomNumber { get; }</h5>
                        <h5>Random RowRandom { get; }</h5>
                        <h5>int RowCount { get; }</h5>
                        <h5>Dictionary&lt;string, object&gt; CurrentRowValues { get; }</h5>
                        <h5>void GetNextRowRandom ()</h5>
                        <h5>MetaProperty CurrentProperty { get; set; }</h5>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>IDataSource</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Members:</strong>
                <ul>
                    <li>
                        <h5>List&lt;string&gt; GetElementList(string identifier)</h5>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>IRules</h4>
                <p>
                    <strong>Purpose:</strong>
                    sdfsdfsssss
                </p>
                <strong>Members:</strong>
                <ul>
                    <li>
                        <h5>Rule GetRuleByTypeAndName(Type ruleType, string propertyName)</h5>
                        <h5>void Add (Rule rule)</h5>
                        <h5>void AddRange (IEnumerable<Rule> rules, bool overwrite = false)</h5>
                        <h5>void RemoveRuleByName (string ruleName)</h5>
                        <h5>void Clear()</h5>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>SeedPacket.Functions Namespace</h3>
        <ul class="namespaceList">
            <li class="class">
                <h4>CacheExtensions (static)</h4>
                <strong>Extension Methods:</strong>
                <ul>
                    <li>
                        <h5>Parse(string json) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Load(string sourceFilePath) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>GetElementList(string identifier) : returns List&lt;string&gt;</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
            <li class="class">
                <h4>func.CacheItemsNext</h4>
                <strong>Methods:</strong>
                <ul>
                    <li>
                        <h5>Parse(string json) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>Load(string sourceFilePath) : returns void</h5>
                        <p>Some information...</p>
                    </li>
                    <li>
                        <h5>GetElementList(string identifier) : returns List&lt;string&gt;</h5>
                        <p>Some information...</p>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>SeedPacket.Exceptions Namespace</h3>
        <ul class="namespaceList">
            <li class="class">
                <h4>InvalidDefaultDataException</h4>
                Serves as the basis for generated datetime data. If not set, currently defaults to 1/1/2018.
            </li>
            <li class="class">
                <h4>InvalidSeedParametersException</h4>
                Serves as the basis for generated datetime data. If not set, currently defaults to 1/1/2018.
            </li>
            <li class="class">
                <h4>InvalidSourceFileException</h4>
                Serves as the basis for generated datetime data. If not set, currently defaults to 1/1/2018.
            </li>
            <li class="class">
                <h4>InvalidSourceStringException</h4>
                Serves as the basis for generated datetime data. If not set, currently defaults to 1/1/2018.
            </li>
            <li class="class">
                <h4>MultipleSourceException</h4>
                Serves as the basis for generated datetime data. If not set, currently defaults to 1/1/2018.
            </li>
            <li class="class">
                <h4>NoSourceException</h4>
                Serves as the basis for generated datetime data. If not set, currently defaults to 1/1/2018.
            </li>
        </ul>
    </div>
</div>

<div class="row documentation">
    <div class="col-md-12">
        <h3>Debugging</h3>
        Information to come
    </div>
</div>
