<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net5.0</TargetFrameworks>
		<Authors>Will Crowther</Authors>
		<Version>5.0.0.0</Version>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
		<PackageIconUrl>http://www.seedpacket.net/Content/Images/favicon.png</PackageIconUrl>
		<FileVersion>5.0.0.0</FileVersion>
		<AssemblyVersion>5.0.0.0</AssemblyVersion>
		<PackageReleaseNotes>5.0.0.0 is now targeting .NET 5 only and will be follow the .NET naming convention.
For previous versions of .net please use 3.0.5.3.
		</PackageReleaseNotes>
		<Description>SeedPacket 5.0 adds a .seed() method onto IEnumerable for the quick seeding of data.  Designed to be a part of your LINQ workflow, it quickly generates and populates many IEnumerable list types  with realistic data that is as simple as: var mylist = new List&lt;Item&gt;().Seed().

SeedPacket is easy to use, with a customizable, and powerful rules engine that keys off the datatype or interface, and name of an item's properties so that the data is appropriate to the type. That is to say, "out-of-the-box" - email properties will be filled with valid emails, phone numbers filled with phone numbers, and names are names etc.  If you need to modify the default generated data the rules are simple to create and modify, and come with a many examples, including a data generator that pulls from an xml or json file or string. The randomly generated data can be set to always be repeatable or to be random on each request.

Go to http://www.seedpacket.net/  for more details.
		</Description>
		<Copyright>Will Crowther</Copyright>
		<PackageLicenseUrl></PackageLicenseUrl>
		<PackageProjectUrl>http://www.seedpacket.net/</PackageProjectUrl>
		<PackageTags>c# linq data generator seed data generation extension method IEnumerable List rules engine seeding prototyping rad</PackageTags>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
	</PropertyGroup>

	<ItemGroup>
    <None Remove="favicon.ico" />
    <None Remove="Source\CsvGeneratorSource.csv" />
    <None Remove="Source\JsonGeneratorSource.json" />
    <None Remove="Source\XmlGeneratorSource.xml" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="favicon.ico" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Source\CsvGeneratorSource.csv" />
    <EmbeddedResource Include="Source\JsonGeneratorSource.json" />
    <EmbeddedResource Include="Source\XmlGeneratorSource.xml" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="WildHare" Version="1.5.0" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
