<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45;net471</TargetFrameworks>
    <Authors>Will Crowther</Authors>
    <Version>3.0.5.3</Version>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageIconUrl>http://www.seedpacket.net/Content/Images/favicon.png</PackageIconUrl>
    <FileVersion>3.0.5.3</FileVersion>
    <AssemblyVersion>3.0.5.3</AssemblyVersion>
    <PackageReleaseNotes>3.0.5.3 Has been updated to accommodate changes to the WildHare dependency.</PackageReleaseNotes>
    <Description>SeedPacket 3.0 (BETA) adds a .seed() method onto IEnumerable for the quick seeding of data. Designed to be a part of your LINQ workflow, it quick generates and populates many IEnumerable list types with realistic data. Ex: var mylist = new List&lt;Item&gt;().Seed().

SeedPacket is easy to use, with a customizable, and powerful rules engine that keys off the datatype or interface, and name of an item's properties so that the data is appropriate to the type. That is to say, "out-of-the-box" - email properties will be filled with valid emails, phone numbers filled with phone numbers, and names are names etc. If you need to modify the default generated data the rules are simple to create and modify, and come with a many examples, including a data generator that pulls from an xml or json file or string. The randomly generated data can be set to always be repeatable or  to be random on each request.

Go to http://www.seedpacket.net/  for more details.</Description>
    <Copyright>Will Crowther</Copyright>
    <PackageLicenseUrl></PackageLicenseUrl>
    <PackageProjectUrl>http://www.seedpacket.net/</PackageProjectUrl>
    <PackageTags>c# linq data generator seed data generation extension method IEnumerable List rules engine seeding prototyping rad</PackageTags>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|netstandard2.0|AnyCPU'">
    <DocumentationFile>C:\Code\Trunk\SeedPacket\SeedPacket\SeedPacket.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="favicon.ico" />
    <None Remove="Source\JsonGeneratorSource.json" />
    <None Remove="Source\XmlGeneratorSource.xml" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="favicon.ico" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Source\JsonGeneratorSource.json" />
    <EmbeddedResource Include="Source\XmlGeneratorSource.xml" />
  </ItemGroup>

  <ItemGroup>
     <!--
    <PackageReference Include="docfx.console" Version="2.46.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    -->
    <PackageReference Include="Microsoft.CSharp" Version="4.5.0" />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
    <PackageReference Include="WildHare" Version="0.9.9.1" />
  </ItemGroup>

  <!--
    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="docfx">
      <Version>2.46.0</Version>
    </PackageReference>
  </ItemGroup>
  -->
</Project>
