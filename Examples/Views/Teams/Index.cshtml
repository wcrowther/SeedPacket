@using Examples.Models

@model List<DateTime>

@*<script src="https://unpkg.com/dayjs@1.8.21/dayjs.min.js"></script>*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<script src="~/Scripts/global.js"></script>
<script src="~/Scripts/vue.js"></script>

<div id="vueContent">

    <div class="row">
        <div class="col-md-8">
            @*<img class="pull-right" style="margin: 20px 0; width:178px; height:215px;" src="~/Content/Images/SeedPacketImage.png" alt="SeedPacket Illustration" />*@
            <h2>NFL Season Generator</h2>
            <h3 class="byline">for the entire {{ Year }} season!</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="elapsedTime pull-right"><span class="hidden-xs">Generator Elapsed Time is </span>{{ ElapsedTime }} secs</div>
            <p>Created by Will Crowther</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-offset-6 col-md-6">
            <div class="teamsSeed" v-cloak>
                <div style="display:inline-block">
                    <span>Seed:</span>
                    <input id="randomSeed" v-model="Seed" type="number" @@change="getFootballInfo()" style="width: 100px;" />
                </div>
                <div style="display:inline-block; margin-left: 20px;">Year:</div>
                <div style="display:inline-block; margin-left: 10px;">
                    <select id="openingSundayId" class="form-control" v-model="Year" @@change="getFootballInfo()">
                        <option disabled value="">- Select one -</option>
                        <option v-for="year in yearList" :value="year.value">{{year.text}}</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <button id="team-show-all" v-show="ActiveTab == 2" class="bubble" @@click="setActiveTeam()" :disable="true">Show All</button>

    @*<button id="testButton" @@click="showTestButtonId()" >TestButton</button>*@

    <ul class="nav nav-tabs">
        <li><a @@click="activeTab=0" :class="{'activeTab' : ActiveTab == 0}" style="color: black;">By Date</a></li>
        <li><a @@click="activeTab=1" :class="{'activeTab' : ActiveTab == 1}" style="color: black;">By Week</a></li>
        <li><a @@click="activeTab=2" :class="{'activeTab' : ActiveTab == 2}" style="color: black;">By Team</a></li>
    </ul>

    <div class="row gameBox" v-if="ActiveTab == 0" id="GamesByDate" v-cloak>
        <div class="col-xs-12 sectionHeader">Games</div>
        <div class="col-xs-12 sectionContent">
            <table class="table table-striped topSpace table-collapse">
                <thead>
                    <tr>
                        <th style="text-align: right;"></th>
                        <th>Home Team</th>
                        <th style="text-align: center">Date / Time</th>
                        <th style="text-align: right">Visiting Team</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(game,index) in Games" :key="index">
                        <td style="text-align:right;font-weight: bold; color: #346194;">
                            <span style="float: left;">{{index+1}}</span>
                            <football-icon :team="game.HomeTeam"></football-icon>
                        </td>
                        <td>{{ game.HomeTeam.Name }}</td>
                        <td v-if="game.GameType == 4" style="text-align:center;">BYE WEEK</td>
                        <td v-else style="text-align:center;">{{ jDate(game.GameDate) }}</td>
                        <td style="text-align: right;">{{ game.AwayTeam.Name }}</td>
                        <td>
                            <football-icon :team="game.AwayTeam"></football-icon>
                        </td>
                    </tr>
            </table>
        </div>
    </div>

    <div class="row gameBox" v-if="ActiveTab == 1" id="GamesByWeek" v-cloak>
        <template v-for="week in gamesByWeek">
            <div class="col-xs-12 sectionHeader" :key="week.key">Week {{ week.key }}</div>
            <div class="col-xs-12 sectionContent">
                <table class="table table-striped topSpace table-collapse">
                    <thead>
                        <tr>
                            <th>&nbsp;</th>
                            <th>Home Team</th>
                            <th style="text-align: center">Date</th>
                            <th style="text-align: right;">Visiting Team</th>
                            <th>&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="game in week.group">
                            <td>
                                <football-icon :team="game.HomeTeam"></football-icon>
                            </td>
                            <td style="text-align:left;">{{game.HomeTeam.Location}} {{game.HomeTeam.Name}}</td>
                            <td v-if="game.GameType == 4" style="text-align:center;">BYE WEEK</td>
                            <td v-else style="text-align:center;">{{ jDate(game.GameDate) }}</td> @*'MMM Do YYYY, h:mm:ss a'*@
                            <td style="text-align: right">{{game.AwayTeam.Location}} {{game.AwayTeam.Name}}</td>
                            <td style="text-align: right">
                                <football-icon :team="game.AwayTeam"></football-icon>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </template>
    </div>

    <div v-if="ActiveTab == 2" id="GamesByTeam" class="row gameBox" v-cloak>

        <div class="col-xs-12 topSpace bottomSpace">
            <div class="col-xs-6 conference-box row-no-gutters" style="border-left: 0;">
                <div v-for="divId in 4" class="col-xs-3">
                    <div v-for="team in teamsByConference(1, divId)" class="col-sm-3 col-md-6 col-sm-3 col-lg-3 team-box">
                        <football-icon size="small" :team="team" @@show-team="setActiveTeam"></football-icon>
                    </div>
                </div>
            </div>
            <div class="col-xs-6 conference-box row-no-gutters" style="border-right: 0;">
                <div v-for="divId in 4" class="col-xs-3">
                    <div v-for="team in teamsByConference(2, divId)" class="col-sm-3 col-md-6 col-sm-3 col-lg-3 team-box">
                        <football-icon size="small" :team="team" @@show-team="setActiveTeam"></football-icon>
                    </div>
                </div>
            </div>
        </div>

        <template v-for="team in Teams" v-if="ActiveTeam ? team.Id == ActiveTeam.Id : true">
            <div class="col-xs-6 sectionHeader" :key="team.Id">
                <football-icon size="medium" :team="team"></football-icon> &nbsp; {{team.Location}} {{team.Name}}
            </div>
            <div class="col-xs-6 sectionHeader team-conf-div">{{team.Conference}} {{team.Division}}</div>
            <div class="col-xs-12">
                <table class="table table-striped topSpace bottomSpace table-collapse">
                    <thead>
                        <tr>
                            <th style="text-align: right;">Home Team</th>
                            <th style="text-align: center">Date</th>
                            <th>Visiting Team</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(game,index) in team.games">
                            <template v-if="game.GameType === 4">
                                <td>{{index + 1}}</td>
                                <td style="text-align:center;">BYE WEEK</td>
                                <td></td>
                            </template>
                            <template v-else>
                                <td>
                                    <div style="float:left; font-weight: bold; color: #346194;">{{index + 1}}</div>
                                    <div style="text-align:right;" :class="{bold: game.HomeTeam.Id === team.Id}">{{game.HomeTeam.Location}} {{game.HomeTeam.Name}}</div>
                                </td>
                                <td style="text-align:center;">{{ jDate(game.GameDate) }} {{game.GameType==0 ? '*':''}}</td>
                                <td :class="{bold: game.AwayTeam.Id === team.Id}">{{game.AwayTeam.Location}} {{game.AwayTeam.Name}}</td>
                            </template>
                        </tr>
                    </tbody>
                </table>
            </div>
        </template>
    </div>

</div>

@section scripts
{
    <script src="~/ScriptApp/_footballIcons.js"></script>
    <script src="~/ScriptApp/teams.js"></script>
}

@*<script language="javascript" type="text/javascript">

        const vueApp = new Vue({
            el: '#vueContent',
            data: {
                Settings:
                {
                    CookieDuration: 7
                },
                ActiveTab: 0,
                Seed: 1234,
                FootballWeeks: [],
                Teams: [],
                ActiveTeam: {},
                Games: [],
                ElapsedTime: '',
                CustomSunday: null,
                Year: 2020,
                YearList: []
            },
            mounted: function ()
            {
                this.getFootballInfo();
                this.ActiveTab = getCookie('activeTab', 0);
            },
            components:
            {
                footballIcon:
                {
                    template: `<span :class="classObject" :style="styleObject" @@click="showTeam(team)" :title="teamName"></span>`,
                    props:
                    {
                        team: { type: Object, required: true, default: null },
                        size:
                        {
                            type: String,
                            default: 'small',
                            validator: (prop) => [
                                'small',
                                'medium',
                                'large',
                            ].includes(prop)
                        }
                    },
                    methods:
                    {
                        showTeam: function (team)
                        {
                            console.log(team);

                            this.$emit('show-team', team);
                        }
                    },
                    computed:
                    {
                        classObject: function () {
                            return `football-icon-${this.size}`;
                        },
                        teamName: function () {
                            return `${this.team.Location} ${this.team.Name} - ${this.team.Conference} ${this.team.Division}`
                        },
                        styleObject: function () {
                            var width = (this.team.DivId - 1) * this.icon.width;
                            var height = (this.team.TeamId - 1) * this.icon.height;

                            width = (this.team.ConfId === 2) ? width + (4 * this.icon.width) : width;

                            return { backgroundPosition: `-${width}px -${height}px` };
                        },
                        icon: function () {
                            if (this.size === 'large')
                                return { width: 120, height: 100 };
                            else if (this.size === 'medium')
                                return { width: 60, height: 50 };
                            else                  // small
                                return { width: 30, height: 25 };
                        }
                    }
                }
            },
            computed:
            {
                activeTab:
                {
                    cache: false,
                    get: function () {
                        try {
                            var tab = getCookie('activeTab', 0);
                            return tab;
                        }
                        catch (e) {
                            return 0;
                        };
                    },
                    set: function (newValue) {
                        this.ActiveTab = newValue;
                        setCookie('activeTab', newValue, this.Settings.CookieDuration);
                    }
                },
                yearList: function () {
                    var options = [];
                    var currentYear = new Date().getFullYear()
                    max = currentYear + 10

                    for (var year = currentYear - 10; year <= max; year++) {
                        var option = { value: year, text: year };
                        options.push(option);
                    }
                    return options;
                },
                gamesByDate: function () {
                    let dateList = this.Games.groupBy(g => g.SeasonWeek);
                    //console.log(JSON.stringify(dateList));

                    return dateList;
                },
                gamesByWeek: function () {
                    return this.Games.groupBy(g => g.SeasonWeek);
                }
            },
            methods:
            {
                showTestButtonId: function () {
                    alert(event.currentTarget.id);
                },
                jDate: function (date, format) {
                    format = typeof format === 'undefined' ? 'h:mm a MMM Do YYYY' : format;

                    return jsonDate(date, format);
                },
                setActiveTab: function (tab) {
                    this.ActiveTab = tab;
                    // console.log('ActiveTab set to: ' + tab);

                    setCookie('activeTab', tab, this.Settings.CookieDuration);
                },
                setActiveTeam: function (team) {
                    if (typeof team === 'undefined' || team === null)
                        this.ActiveTeam = null;
                    else
                        this.ActiveTeam = team;
                },
                getFootballInfo: function () {
                    console.log('GetFootballInfo for: ' + this.Year);
                    let self = this;

                    $.ajax({
                        type: 'POST',
                        url: '/Teams/GetFootballInfo',
                        data: JSON.stringify({ Seed: this.Seed, Year: this.Year }),
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'JSON', //'html',
                        success: function (result) {
                            self.Teams = result.Teams;
                            self.Games = result.Games;
                            self.OpeningSunday = result.OpeningSunday;
                            self.ElapsedTime = result.ElapsedTime;

                            if (self.Teams)
                                self.ActiveTeam = self.Teams[0];

                            for (var i = 0; i < self.Teams.length; i++) {
                                var team = self.Teams[i];

                                self.Teams[i].games = self.Games.filter(g => g.HomeTeam.Id === team.Id ||
                                    g.AwayTeam.Id === team.Id);
                            }
                        }
                    });
                },
                gamesByTeam: function () {
                    for (var i = 0; i < this.Teams.length; i++) {
                        var team = Teams[i];

                        this.Teams[i].games = this.Games.filter(g => g.HomeTeam.Id === team.Id ||
                            g.AwayTeam.Id === team.Id)
                    }
                },
                teamsByConference: function (confId, divId) {
                    return this.Teams.filter(g => g.ConfId === confId && g.DivId === divId);
                }
            }
        })

    </script>*@
