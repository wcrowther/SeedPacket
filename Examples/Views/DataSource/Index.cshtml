
<div class="row">
    <div class="col-md-8">
        <img class="pull-right" style="margin: 20px 0; width:178px; height:215px;" src="~/Content/Images/SeedPacketImage.png" alt="SeedPacket Illustration" />
        <h2>SeedPacket Examples</h2>
        <h3 class="byline">version 2 in C#</h3>
        <p>Created by Will Crowther</p>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <h3>DataSource Example 1</h3>

        <div class="pull-right">
            <div class="randomSeed">
                Seed<input id="randomSeed" type="text" value="1234" maxlength="4" style="width:44px; text-align: center;" />
            </div>
            <div class="rowCounter">
                Rows<input id="numberOfRowResults" type="text" value="20" maxlength="4" style="width:44px; text-align: center;" />
            </div>
        </div>
        <p>
           This examples uses the conventional MVC controller standard of passing in a model to the page where the seed data has 
            already been created by the controller. It has an ajax component that shows how to refresh the table with a dynamically
            generated list of variable length and custom seed.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @{ Html.RenderPartial("_DataSourceExample1"); }
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <h3>DataSource Example 2</h3>
        <p>
            This example goes back to putting the code inline in the page and shows a more advanced generator setup. The 
            first you will notice is that an xml file is being passed into the constructor. This xml file is based on the
            default xml, with the addition of some extra data such as "Descriptions" and "Sports". "Description" is then 
            used by the new Description. Also, note how the Items list is seeded and then stored in the generator.Cache
            for use in the Products list.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @{ Html.RenderPartial("_DataSourceExample2"); }
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <a class="nextpage pull-right" href="/Extending">
            Extending<span class="glyphicon glyphicon-triangle-right" aria-hidden="true"></span>
        </a>
    </div>
</div>
